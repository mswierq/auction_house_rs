syntax = "proto3";

import "google/protobuf/empty.proto";
package auction_house_rs.backend.client;

service Client {
    rpc DepositFunds(DepositFunds) returns (google.protobuf.Empty);
    rpc WithdrawFunds(WithdrawFunds) returns (google.protobuf.Empty);
    rpc ShowFunds(ShowFunds) returns (ShowFundsResponse);
    rpc DepositItem(DepositItem) returns (google.protobuf.Empty);
    rpc WithdrawItem(WithdrawItem) returns (google.protobuf.Empty);
    rpc ShowItems(ShowItems) returns (ShowItemsResponse);
    rpc SellItem(SellItem) returns (google.protobuf.Empty);
    rpc BidItem(BidItem) returns (google.protobuf.Empty);
    rpc ListAuctions(ListAuctions) returns (ListAuctionsResponse);
    rpc ListWatchAuctions(ListAuctions) returns (stream ListAuctionsResponse);
    rpc WatchUserAuctions(stream WatchUserAuctions) returns (stream WatchUserAuctionsResponse);
}

message UserSession {
    string account_id = 1;
    optional string session_id = 2;
}

message DepositFunds {
    UserSession user_session = 1;
    uint64 amount = 2;
}

message WithdrawFunds {
    UserSession user_session = 1;
    uint64 amount = 2;
}

message ShowFunds {
    UserSession user_session = 1;
}

message ShowFundsResponse {
    uint64 funds = 1;
}

message DepositItem {
    UserSession user_session = 1;
    string item = 2;
}

message WithdrawItem {
    UserSession user_session = 1;
    string item = 2;
}

message ShowItems {
    UserSession user_session = 1;
}

message ShowItemsResponse {
    repeated string items = 1;
}

message SellItem {
    UserSession user_session = 1;
    string item = 2;
    uint64 price = 3;
    uint64 duration = 4;
}

message BidItem {
    UserSession user_session = 1;
    string auction_id = 2;
    uint64 price = 3;
}

message ListAuctions {
}

message Auction {
    string id = 1;
    string item = 2;
    uint64 price = 3;
    string seller = 4;
    string buyer = 5;
    uint64 created_at = 6;
    uint64 ends_at = 7;
}

message WatchUserAuctions {
    UserSession user_session = 1;
}

message ListAuctionsResponse {
    repeated Auction auctions = 1;
}

message WatchUserAuctionsResponse {
    repeated Auction auctions = 1;
    repeated string expired_auctions = 2;
    repeated string finalized_auctions = 3;
}
